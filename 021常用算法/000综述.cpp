/*
常用算法：
1.算法主要是有头文件<algorithm><functional><numeric>组成
2.<algorithm>是所有STL头文件中最大的一个，范围涉及到比较，交换，查找，遍历操作，修改查找等
3.<numeric>体积很小，只包括几个在序列上面进行数字运算的模板函数
4.<functional>定义了一些模板类，用于声明函数对象
常用的算法：
1.遍历算法：
 1.for_each()
 2.transfrom()
2.常用的查找算法：
 1.find():查找元素
 2.find_if():按条件查找元素
 3.adjacent_find():查找相邻重复的元素
 4.binary_search():二分法查找
 5.count():统计元素的个数
 6.count_if():按条件统计元素的个数
3.常用排序算法
 1.sort:对容器内元素进行排序
 2.random_shuffle:洗牌，指定范围内的元素随机调整次序
 3.merge:容器元素合并，并储存到另一个容器中
 4.reverse:反转指定范围内的元素
4.常用拷贝与替换算法
 1.copy:将容器内指定范围的元素拷贝到另一容器中
 2.replace:将容器内指定范围的旧元素修改为新元素
 3.replace_if:将容器内指定范围满足条件的元素替换为新元素
 4.swap:交换两个容器的元素
5.常用的算术生成算法：
注意：算术生成算法属于小型算法,使用时包含头文件#include<numeric>
 1.accumulate():计算容器元素累计总和
 2.fill():向容器中添加元素
6.常用的集合算法：
 1.set_intersection:求两个容器的交集
 2.set_union:求两个容器的并集
 3.set_difference:求两个容器的差集
*/